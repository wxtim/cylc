# Configuration for the Travis continuous integration system
# ==========================================================
# 
# Travis is a free service for running automatic tests on Github repositories.
# This file configures Travis for Cylc, telling it how to install Cylc and run
# the test battery.
# 
# Test results get posted back to Github. By default Travis will run tests on any
# pull requests, adding a comment on the pull request page to say if the tests
# pass or fail, it will also test any new commits, showing the test results on
# the branch page, e.g. https://github.com/cylc/cylc-flow/branches.
# 
# Connecting a Cylc branch
# ------------------------
# 
# To make use of Travis you will first need to create a fork of Cylc in Github.
# Log in to https://travis-ci.org using your Github credentials, it will ask for
# permission to see your repositories, set the status of branches (whether the
# build passes or fails tests) and create hooks so Travis gets notified of new
# commits.
# 
# Travis will create a list of all of your public Github repositories, you can
# enable automatic tests for a repository using the switches in this list.
# 
# More information for Travis can be found at http://docs.travis-ci.com/user/getting-started/

---
cache: pip
dist: xenial
addons:
  apt:
    update: true  # instruct travis-ci to always run apt-get before each build

language: python

stages:
- unit-test
- functional-test
- documentation

env:
  global:
    - PATH="${TRAVIS_BUILD_DIR}/bin:$PATH"
    # Only run the generic tests on Travis CI.
    - CYLC_TEST_RUN_PLATFORM=false
    # Custom diff command to ignore Xlib errors (xvfb has not RANDR extension).
    - CYLC_TEST_DIFF_CMD="diff -I Xlib -u"
    # This coverage RC file is created under the script task
    - COVERAGE_PROCESS_START="/tmp/.coveragerc"

regressiontest: &regressiontest
  stage: functional-test
  python:
    - "3.7"
  install:
    - .travis/install.sh functional-tests docs
  script:
    - export PYTHONPATH="${TRAVIS_BUILD_DIR}/.travis"
    - .travis/coverage-data.sh
    - coverage run .travis/cover.py
    - unset PYTHONPATH
  after_failure:
    - .travis/after_failure.sh
  after_success:
    # Report metrics, such as coverage
    - coverage combine --append
    - coverage xml --ignore-errors
    - bash <(curl -s https://codecov.io/bash)

jobs:
  include:
  # run regression tests in chunks with the most contemporary
  # supported Python version
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=1
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=2
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=3
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=4
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=5
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=6
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=7
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=8
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=9
  - <<: *regressiontest
    python: "3.7"
    env:
      - CHUNK="1/8"
      - NTESTS=10

  # TODO: run shortlist of regression tests with the
  #       least contemporary Python version
  #
