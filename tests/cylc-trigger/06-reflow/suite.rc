[cylc]
    [[reference test]]
        expected task failures = t2.1
[scheduling]
    [[graph]]
# Initially t2 will fail because of an undefined environment fail.
# t3 triggers off its failure, and retriggers t1, which broadcasts the
# environment var to t2 so it succeeds next time.
# NOTE THIS MAKES USE OF SoD REFLOW.
        R1 = """
t1 => t2
t2:failed => t3
"""
[runtime]
    [[t1]]
        script = """
if ((${CYLC_TASK_SUBMIT_NUMBER} >= 2)); then
    cylc broadcast "${CYLC_SUITE_NAME}" -s '[environment]CYLC_TEST_VAR_X=x'
fi
"""
    [[t2]]
        script = printenv CYLC_TEST_VAR_X
    [[t3]]
        script = cylc trigger "${CYLC_SUITE_NAME}" 't1.1'
